services:

  web-db:
    image: postgres:16
    environment:
      - POSTGRES_DB=${WEB_POSTGRES_DB}
      - POSTGRES_USER=${WEB_POSTGRES_USER}
      - POSTGRES_PASSWORD=${WEB_POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - app_db_postgres_data:/var/lib/postgresql/data
      - ./db/web/db-init:/docker-entrypoint-initdb.d
    networks:
      - app-network
      
  frontend:
    build: 
      context: ./frontend
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - ./frontend/node_modules:/app/node_modules
    ports:
      - "8030:3000"
    networks:
      - app-network
    env_file:
      - .env

  backend:
    build: 
      context: ./backend
    depends_on:
      - web-db
      - redis
    volumes:
      - ./backend:/app
      - ./backend/etc/docker/nginx/conf.d/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./backend/etc/docker/php/php.ini:/usr/local/etc/php/conf.d/custom-php.ini
    ports:
      - "8020:80"
    user: root
    networks:
      - app-network
    environment:
      - REDIS_URI=redis://redis:6379
      - POSTGRES_DB=${WEB_POSTGRES_DB}
      - POSTGRES_USER=${WEB_POSTGRES_USER}
      - POSTGRES_PASSWORD=${WEB_POSTGRES_PASSWORD}
      - POSTGRES_INTERNAL_HOST=${WEB_POSTGRES_INTERNAL_HOST}
      - POSTGRES_EXTERNAL_PORT=${WEB_POSTGRES_EXTERNAL_PORT}
      - SPEAKY_APP_ENV=${SPEAKY_APP_ENV}
      - SPEAKY_DEBUG=${SPEAKY_DEBUG}
    env_file:
      - .env


  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - app-network

volumes:
  app_db_postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge 